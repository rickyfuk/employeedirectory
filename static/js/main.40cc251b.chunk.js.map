{"version":3,"sources":["components/Header/header.js","components/SearchBar/searchBar.js","components/ResultTable/ResultTableHead/resultTableHead.js","components/ResultTable/ResultTableBody/resultTableBody.js","components/ResultTable/resultTable.js","utils/api.js","App.js","index.js"],"names":["Header","className","SearchBar","props","type","placeholder","value","searchTarget","onChange","handleInputChange","ResultTableHead","console","log","tableHead","map","eachData","onClick","tableSort","name","ResultTableBody","resultList","data-th","src","picture","medium","alt","first","last","phone","href","email","target","login","uuid","ResultTable","handleSort","axios","get","App","useState","setSearchTarget","fullList","filteredList","headings","width","class","order","employeeData","setEmployeeData","useEffect","API","then","results","data","event","filteritem","filteredListData","filter","item","values","toLowerCase","indexOf","heading","sortedUsers","sort","a","b","trytry","undefined","toString","localeCompare","updatedHeadings","elem","filteredUsers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40cc251b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div className='jumbotron header'>\r\n\t\t\t<h1>Employee Directory</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './searchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n\treturn (\r\n\t\t<div className='staffSearch'>\r\n\t\t\t<div className='staffSearchTitle'>\r\n\t\t\t\t<h4>Search Employee</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='input-group mb-3'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tplaceholder='Enter an employee name'\r\n\t\t\t\t\t// the attribute \"value\" for saving the user input\r\n\t\t\t\t\tvalue={props.searchTarget}\r\n\t\t\t\t\t// the attribute \"onChange\" is an event listening where kicks the handleInputChange function whenever the input is change\r\n\t\t\t\t\tonChange={props.handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n// import ResultTableBody from '../ResultTableBody/resultTableBody';\r\n\r\nfunction ResultTableHead(props) {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t{props.tableHead.map((eachData) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\tclassName='col resultTableHead'\r\n\t\t\t\t\t\t\tkey={eachData.name}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t// context.handleSort(name.toLowerCase());\r\n\t\t\t\t\t\t\t\tprops.tableSort(eachData);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{eachData.name}\r\n\t\t\t\t\t\t\t<span className='pointer'></span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t\t{/* <ResultTableBody\r\n\t\t\t\tresultList={props.resultList}\r\n\t\t\t\t// searchTarget={props.searchTarget}\r\n\t\t\t/> */}\r\n\t\t</thead>\r\n\t);\r\n}\r\n\r\nexport default ResultTableHead;\r\n","import React from 'react';\r\n\r\nfunction ResultTableBody(props) {\r\n\t// console.log(props);\r\n\t// function formatDate(date) {\r\n\t// \tconst dateArray = date.split('-');\r\n\t// \tconst year = dateArray[0];\r\n\t// \tconst month = dateArray[1];\r\n\t// \tconst dayArray = dateArray[2].split('T');\r\n\t// \tconst day = dayArray[0];\r\n\t// \tconst formattedDate = [month, day, year].join('-');\r\n\t// \treturn formattedDate;\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<tbody>\r\n\t\t\t{/* {props.searchTarget} */}\r\n\t\t\t{props.resultList.map((eachData) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<tr key={eachData.login.uuid}>\r\n\t\t\t\t\t\t<td data-th='Image' className='align-middle resultTableBody'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={eachData.picture.medium}\r\n\t\t\t\t\t\t\t\talt={\r\n\t\t\t\t\t\t\t\t\t'profile image for ' +\r\n\t\t\t\t\t\t\t\t\teachData.name.first +\r\n\t\t\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\t\t\teachData.name.last\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName='img-responsive'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\tdata-th='Name'\r\n\t\t\t\t\t\t\tclassName='name-cell align-middle resultTableBody'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{eachData.name.first} {eachData.name.last}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td data-th='Phone' className='align-middle resultTableBody'>\r\n\t\t\t\t\t\t\t{eachData.phone}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td data-th='Email' className='align-middle resultTableBody'>\r\n\t\t\t\t\t\t\t<a href={'mailto:' + eachData.email} target='__blank'>\r\n\t\t\t\t\t\t\t\t{eachData.email}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t{/* <td data-th='DOB' className='align-middle'>\r\n\t\t\t\t\t\t\t{formatDate(eachData.dob.date)}\r\n\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</tbody>\r\n\t);\r\n}\r\n\r\nexport default ResultTableBody;\r\n","import React from 'react';\r\nimport './resultTable.css';\r\nimport ResultTableHead from './ResultTableHead/resultTableHead';\r\nimport ResultTableBody from './ResultTableBody/resultTableBody';\r\n\r\nfunction ResultTable(props) {\r\n\tconsole.log(props);\r\n\r\n\t// // function for filter out the input from the user\r\n\t// const handleSearchChange = (event) => {\r\n\t// \tconst filter = event.target.value;\r\n\t// \tconst filteredList = developerState.users.filter((item) => {\r\n\t// \t\tlet values = item.name.first.toLowerCase();\r\n\t// \t\treturn values.indexOf(filter.toLowerCase()) !== -1;\r\n\t// \t});\r\n\r\n\t// \tsetDeveloperState({\r\n\t// \t\t...developerState,\r\n\t// \t\tfilteredUsers: filteredList,\r\n\t// \t});\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div className='resultTable mt-2'>\r\n\t\t\t<table className='table'>\r\n\t\t\t\t<ResultTableHead\r\n\t\t\t\t\ttableHead={props.tableHead}\r\n\t\t\t\t\ttableSort={props.handleSort}\r\n\t\t\t\t\t// resultList={props.resultList}\r\n\t\t\t\t/>\r\n\t\t\t\t<ResultTableBody\r\n\t\t\t\t\tresultList={props.resultList}\r\n\t\t\t\t\t// searchTarget={props.searchTarget}\r\n\t\t\t\t/>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultTable;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n\t// Gets all employees\r\n\tgetAllEmployee: function () {\r\n\t\treturn axios.get('https://randomuser.me/api/?results=200&nat=us');\r\n\t},\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header/header';\nimport SearchBar from './components/SearchBar/searchBar';\nimport ResultTable from './components/ResultTable/resultTable';\nimport API from './utils/api';\n\nfunction App() {\n\t// variable (State)\n\n\t// variable 1\n\t// set the variable searchTarget by useState\n\t// - default value as \"\"\n\t// - use setSearchTarget function to change the searchTarget value\n\tconst [searchTarget, setSearchTarget] = useState('');\n\t// variable 2\n\t// set the variable employeeData by useState\n\t// the employeeData is the data from the API call and render to component resultTable\n\t// - default value as \"\"\n\t// - use setEmployeeData function to change the employeeData value\n\tconst [employeeData, setEmployeeData] = useState({\n\t\tfullList: [],\n\t\tfilteredList: [],\n\t\theadings: [\n\t\t\t{\n\t\t\t\tname: 'Image',\n\t\t\t\twidth: '15%',\n\t\t\t\tclass: 'resultTableImage',\n\t\t\t\torder: 'ascend',\n\t\t\t},\n\t\t\t{ name: 'Name', width: '35%', class: 'resultTableName', order: 'ascend' },\n\t\t\t{\n\t\t\t\tname: 'Phone',\n\t\t\t\twidth: '15%',\n\t\t\t\tclass: 'resultTablePhone',\n\t\t\t\torder: 'ascend',\n\t\t\t},\n\t\t\t{ name: 'Email', width: '35%', class: 'resultTable', order: 'ascend' },\n\t\t],\n\t});\n\n\t// function\n\n\t// function 1 - handleInputChange\n\t// input the name enter by the user and put it into variable searchTarget\n\tfunction handleInputChange(event) {\n\t\t// console.log(event.target);\n\t\tconsole.log(event.target.value);\n\t\tsetSearchTarget(event.target.value);\n\t\tconst filteritem = event.target.value;\n\t\tconst filteredListData = employeeData.fullList.filter((item) => {\n\t\t\tlet values =\n\t\t\t\titem.name.first.toLowerCase() + ' ' + item.name.last.toLowerCase();\n\t\t\tconsole.log(filteritem, values);\n\t\t\tif (values.indexOf(filteritem.toLowerCase()) !== -1) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\n\t\tsetEmployeeData({ ...employeeData, filteredList: filteredListData });\n\t}\n\n\tconst handleSort = (heading) => {\n\t\tconsole.log(heading);\n\t\tconsole.log(heading.order);\n\t\t// console.log(currentOrder);\n\t\tif (heading.order === 'descend') {\n\t\t\theading.order = 'ascend';\n\t\t} else {\n\t\t\theading.order = 'descend';\n\t\t}\n\n\t\tconst compareFnc = (a, b) => {\n\t\t\tconsole.log(a);\n\t\t\tconsole.log(b);\n\t\t\tconsole.log(heading.order);\n\t\t\tconsole.log(heading.name);\n\t\t\tconsole.log(heading.name.toLowerCase());\n\t\t\tconsole.log(heading.name.toLowerCase() === 'name');\n\t\t\tconst trytry = heading.name;\n\t\t\tconsole.log(a['phone']);\n\t\t\tconsole.log(a[trytry]);\n\t\t\tconsole.log(b['phone']);\n\t\t\tif (heading.order === 'ascend') {\n\t\t\t\tconsole.log('ascend is run');\n\t\t\t\t// account for missing values\n\t\t\t\tif (a[heading.name.toLowerCase()] === undefined) {\n\t\t\t\t\tconsole.log('if underfined is run for 1');\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (b[heading.name.toLowerCase()] === undefined) {\n\t\t\t\t\tconsole.log('if underfined is run for -1');\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t// numerically\n\t\t\t\telse if (heading.name.toLowerCase() === 'name') {\n\t\t\t\t\tconsole.log('if name sort');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn a[heading.name.toLowerCase()].first\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.localeCompare(b[heading.name.toLowerCase()].first.toString());\n\t\t\t\t} else if (heading.name.toLowerCase() === 'phone') {\n\t\t\t\t\tconsole.log('if phnoe sort');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn a[heading.name.toLowerCase()] - b[heading.name.toLowerCase()];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('if other sort');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn a[heading.name.toLowerCase()]\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.localeCompare(b[heading.name.toLowerCase()].toString());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('desend is run');\n\t\t\t\t// account for missing values\n\t\t\t\tif (a[heading.name.toLowerCase()] === undefined) {\n\t\t\t\t\tconsole.log('else underfined is run for 1');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (b[heading.name.toLowerCase()] === undefined) {\n\t\t\t\t\tconsole.log('else underfined is run for -1');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t// numerically\n\t\t\t\telse if (heading.name.toLowerCase() === 'Name') {\n\t\t\t\t\tconsole.log('else name sort');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn a[heading.name.toLowerCase()].first\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.localeCompare(b[heading.name.toLowerCase()].first.toString());\n\t\t\t\t} else if (heading.name.toLowerCase() === 'Phone') {\n\t\t\t\t\tconsole.log('else phone sort');\n\t\t\t\t\tconsole.log(b[heading.name.toLowerCase()]);\n\t\t\t\t\tconsole.log(a[heading.name.toLowerCase()]);\n\t\t\t\t\treturn a[heading.name.toLowerCase()] - b[heading.name.toLowerCase()];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('else other sort');\n\t\t\t\t\treturn a[heading.name.toLowerCase()]\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.localeCompare(b[heading.name.toLowerCase()].toString());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst sortedUsers = employeeData.filteredList.sort(compareFnc);\n\t\tconsole.log(sortedUsers);\n\t\tconst updatedHeadings = employeeData.headings.map((elem) => {\n\t\t\telem.order = elem.name === heading.name ? heading.order : elem.order;\n\t\t\treturn elem;\n\t\t});\n\n\t\tsetEmployeeData({\n\t\t\t...employeeData,\n\t\t\tfilteredUsers: sortedUsers,\n\t\t\theadings: updatedHeadings,\n\t\t});\n\t};\n\n\t// use \"useeffect\" to load the data from random employee list\n\tuseEffect(() => {\n\t\tAPI.getAllEmployee().then((results) => {\n\t\t\tconsole.log(results.data.results);\n\t\t\t// setEmployeeData({ fullList: results.data.results });\n\t\t\tsetEmployeeData({\n\t\t\t\t...employeeData,\n\t\t\t\tfullList: results.data.results,\n\t\t\t\tfilteredList: results.data.results,\n\t\t\t});\n\t\t});\n\t}, []);\n\n\t// use \"useeffect\" for console logging as the API call is async\n\tuseEffect(() => {\n\t\tconsole.log(employeeData);\n\t}, [employeeData]);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<SearchBar\n\t\t\t\thandleInputChange={handleInputChange}\n\t\t\t\tsearchTarget={searchTarget}\n\t\t\t/>\n\t\t\t<ResultTable\n\t\t\t\thandleSort={handleSort}\n\t\t\t\tresultList={employeeData.filteredList}\n\t\t\t\ttableHead={employeeData.headings}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}